// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsAPI.Data;

#nullable disable

namespace NewsAPI.Migrations
{
    [DbContext(typeof(NewsDbContext))]
    [Migration("20230923113054_addingImagesTable")]
    partial class addingImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewsAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "World"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Politics"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Climate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Science & Tech"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Business"
                        });
                });

            modelBuilder.Entity("NewsAPI.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NewsAPI.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Content = "news of worldnews of worldnews of worldnews of worldnews of world",
                            ImageUrl = "nop",
                            PublishDate = new DateTime(2023, 9, 23, 14, 30, 53, 867, DateTimeKind.Local).AddTicks(4460),
                            Title = "news of Egypt",
                            Writer = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Content = "news of worldnews of worldnews of worldnews of worldnews of world",
                            ImageUrl = "nop",
                            PublishDate = new DateTime(2023, 9, 23, 14, 30, 53, 867, DateTimeKind.Local).AddTicks(4475),
                            Title = "news of world",
                            Writer = "Ali"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Content = "news of worldnews of worldnews of worldnews of worldnews of world",
                            ImageUrl = "nop",
                            PublishDate = new DateTime(2023, 9, 23, 14, 30, 53, 867, DateTimeKind.Local).AddTicks(4477),
                            Title = "news of Climate",
                            Writer = "Ali"
                        });
                });

            modelBuilder.Entity("NewsAPI.Models.News", b =>
                {
                    b.HasOne("NewsAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
